---
interface Event {
  timestamp: string;
  title: string;
  description: string;
}

interface Props {
  events: Event[];
  title?: string;
}

const { events, title = "TEMPORAL_SEQUENCE" } = Astro.props;
---

<div class="my-32 mx-auto max-w-4xl px-8">
  <div class="font-mono">
    <div class="text-xs text-black/40 mb-6">MEMORY_TIMELINE: {title}</div>

    <div class="border-l-2 border-black/10 ml-2 space-y-12 pl-6">
      {
        events.map((event, index) => (
          <div class="relative">
            {/* Timeline node */}
            <div class="timeline-node absolute -left-[2.1rem] w-4 h-4 rounded-full bg-green-500/30 border border-black/10 flex items-center justify-center">
              <div class="w-1.5 h-1.5 rounded-full bg-green-500" />
            </div>

            {/* Event content */}
            <div class="space-y-2">
              <div class="text-xs text-black/50">{event.timestamp}</div>
              <h3 class="text-lg font-light">{event.title}</h3>
              <p class="text-sm text-black/70">{event.description}</p>
            </div>
          </div>
        ))
      }

      {/* Timeline end indicator */}
      <div class="ml-[-5px] text-xs text-black/40">// TIMELINE_TERMINATED</div>
    </div>
  </div>
</div>

<style>
  .timeline-node {
    animation: pulse 4s ease-in-out infinite;
  }

  @keyframes pulse {
    0% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.3);
    }
    100% {
      transform: scale(1);
    }
  }
</style>
