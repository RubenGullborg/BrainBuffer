---
import { Image } from "astro:assets";
---

<div
  class="relative py-16 px-4 overflow-hidden bg-gradient-to-b from-zinc-800 to-zinc-950"
>
  <div class="max-w-6xl mx-auto">
    <!-- Introductory section -->
    <div class="text-center mb-16">
      <h2 class="text-3xl md:text-5xl font-mono text-zinc-100 glitch-text mb-8">
        <span class="text-primary">NEURAL CACHE</span> ARCHITECTURE
      </h2>

      <p class="text-zinc-400 max-w-3xl mx-auto mb-10 terminal-text">
        // Welcome, visitor. You now have access to my digital consciousness.
        <br />
        // This neural cache functions as my external memory system
        <br />
        // where ideas, inspiration, and thoughts transform into digital structure.
      </p>

      <div class="flex justify-center gap-2 mb-12">
        <div class="h-1 w-20 bg-primary animate-pulse"></div>
        <div class="h-1 w-10 bg-zinc-600"></div>
        <div class="h-1 w-20 bg-zinc-600"></div>
      </div>
    </div>

    <!-- Interactive processor diagram -->
    <div
      class="relative bg-zinc-900/50 border border-zinc-800 rounded-lg p-6 backdrop-blur-sm"
    >
      <div class="absolute top-3 left-3 flex gap-1.5">
        <div class="w-3 h-3 rounded-full bg-red-500/70"></div>
        <div class="w-3 h-3 rounded-full bg-yellow-500/70"></div>
        <div class="w-3 h-3 rounded-full bg-green-500/70"></div>
      </div>

      <h3 class="font-mono text-zinc-400 text-center mb-8 mt-4">
        NEURAL PROCESSOR STATUS
      </h3>

      <div class="grid grid-cols-1 md:grid-cols-3 gap-8 mb-6">
        <!-- Layer 1: Auditory -->
        <div class="neural-node" data-active="true">
          <div class="node-header">
            <span class="node-indicator pulse-green"></span>
            <span class="node-name">L1: AUDITORY</span>
          </div>
          <div class="node-content">
            <div class="node-meter">
              <div class="meter-fill" style="width: 78%"></div>
            </div>
            <div class="node-status">ACTIVE</div>
            <div class="node-description">
              Sound memory, musical inspirations, and auditory concepts
            </div>
          </div>
        </div>

        <!-- Layer 2: Visual -->
        <div class="neural-node" data-active="true">
          <div class="node-header">
            <span class="node-indicator pulse-green"></span>
            <span class="node-name">L2: VISUAL</span>
          </div>
          <div class="node-content">
            <div class="node-meter">
              <div class="meter-fill" style="width: 92%"></div>
            </div>
            <div class="node-status">ACTIVE</div>
            <div class="node-description">
              Image memory, design inspiration, and aesthetic systems
            </div>
          </div>
        </div>

        <!-- Layer 3: Semantic -->
        <div class="neural-node" data-active="true">
          <div class="node-header">
            <span class="node-indicator pulse-green"></span>
            <span class="node-name">L3: SEMANTIC</span>
          </div>
          <div class="node-content">
            <div class="node-meter">
              <div class="meter-fill" style="width: 65%"></div>
            </div>
            <div class="node-status">ACTIVE</div>
            <div class="node-description">
              Textual memory, concepts, and knowledge structures
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Call to action -->
    <div class="text-center mt-16">
      <p class="text-zinc-500 mb-6 font-mono text-sm">
        SELECT A NEURAL PROCESSOR TO ACCESS CACHE
      </p>
      <div class="flex justify-center gap-4">
        <a href="/L1" class="neural-button">
          <span class="button-label">L1: AUDITORY</span>
          <span class="button-indicator"></span>
        </a>
        <a href="/L2" class="neural-button">
          <span class="button-label">L2: VISUAL</span>
          <span class="button-indicator"></span>
        </a>
        <a href="/L3" class="neural-button">
          <span class="button-label">L3: SEMANTIC</span>
          <span class="button-indicator"></span>
        </a>
      </div>
    </div>
  </div>
</div>

<style>
  .glitch-text {
    position: relative;
    animation: subtle-glitch 8s infinite;
  }

  .terminal-text {
    font-family: monospace;
    line-height: 1.7;
    animation: fade-in 1.5s ease-out;
  }

  .neural-node {
    background: rgba(30, 30, 35, 0.7);
    border: 1px solid rgba(100, 100, 120, 0.3);
    border-radius: 4px;
    padding: 1rem;
    transition: all 0.3s ease;
  }

  .neural-node:hover {
    background: rgba(40, 40, 50, 0.9);
    transform: translateY(-2px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  }

  .node-header {
    display: flex;
    align-items: center;
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid rgba(100, 100, 120, 0.2);
  }

  .node-indicator {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin-right: 8px;
    background-color: rgba(0, 255, 120, 0.7);
  }

  .pulse-green {
    animation: pulse 2s infinite;
  }

  .node-name {
    font-family: monospace;
    color: rgba(200, 200, 220, 0.9);
    font-size: 0.9rem;
  }

  .node-meter {
    height: 4px;
    background: rgba(80, 80, 100, 0.3);
    border-radius: 2px;
    margin-bottom: 0.75rem;
    overflow: hidden;
  }

  .meter-fill {
    height: 100%;
    background: linear-gradient(
      90deg,
      rgba(0, 200, 100, 0.7),
      rgba(0, 255, 150, 0.9)
    );
    border-radius: 2px;
    transition: width 1s ease-in-out;
  }

  .node-status {
    font-size: 0.8rem;
    color: rgba(0, 255, 150, 0.9);
    font-family: monospace;
    margin-bottom: 0.5rem;
  }

  .node-description {
    font-size: 0.85rem;
    color: rgba(180, 180, 200, 0.8);
    line-height: 1.4;
  }

  .neural-button {
    display: inline-flex;
    align-items: center;
    padding: 0.6rem 1.2rem;
    background: rgba(40, 40, 50, 0.8);
    border: 1px solid rgba(100, 100, 120, 0.3);
    border-radius: 3px;
    color: rgba(200, 200, 220, 0.9);
    font-family: monospace;
    font-size: 0.85rem;
    transition: all 0.2s ease;
    gap: 0.5rem;
  }

  .neural-button:hover {
    background: rgba(60, 60, 80, 0.8);
    border-color: rgba(0, 255, 150, 0.5);
    transform: translateY(-1px);
  }

  .button-indicator {
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background-color: rgba(0, 255, 150, 0.7);
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0% {
      opacity: 0.6;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0.6;
    }
  }

  @keyframes fade-in {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes subtle-glitch {
    0% {
      transform: translate(0);
    }
    2% {
      transform: translate(-2px, 1px);
    }
    4% {
      transform: translate(0);
    }
    40% {
      transform: translate(0);
    }
    42% {
      transform: translate(1px, -1px);
    }
    44% {
      transform: translate(0);
    }
    80% {
      transform: translate(0);
    }
    82% {
      transform: translate(-1px, 1px);
    }
    84% {
      transform: translate(0);
    }
    100% {
      transform: translate(0);
    }
  }
</style>

<script>
  // Animer meter fills
  setTimeout(() => {
    const meterFills = document.querySelectorAll(".meter-fill");
    meterFills.forEach((fill) => {
      const element = fill as HTMLElement;
      const finalWidth = element.style.width;
      element.style.width = "0%";

      setTimeout(() => {
        element.style.width = finalWidth;
      }, 300);
    });
  }, 500);
</script>
