---
interface Props {
  content: string;
  type: "observation" | "question" | "hypothesis" | "note";
  source?: string;
  timestamp?: string;
  id?: string;
}

const { content, type, source, timestamp, id = Math.floor(Math.random() * 10000).toString() } = Astro.props;

// Format timestamp in a more terminal-like way
function formatTimestamp(timestamp: string | undefined) {
  if (!timestamp) return new Date().toISOString().replace('T', '_').replace(/\..+/, '');
  return timestamp;
}

// Terminal-style type indicators
const typeIndicators = {
  observation: "OBS>",
  question: "QRY>",
  hypothesis: "HYP>",
  note: "LOG>"
};

// Terminal-style descriptors
const typeDescriptions = {
  observation: "Visual Input Processing",
  question: "Knowledge Inquiry",
  hypothesis: "Predictive Analysis Model",
  note: "Memory Buffer Entry"
};
---

<div class="my-32 mx-auto max-w-4xl px-8">
  <div class="font-mono rounded-sm border border-black/5 shadow-sm">
    <div class="bg-black/5 px-4 py-2 text-xs flex items-center justify-between">
      <div class="flex items-center gap-2">
        <span class="bg-black/10 px-1 rounded-sm">FRAGMENT-{id}</span>
        <span>:</span>
        <span>{typeDescriptions[type]}</span>
      </div>
      <span>{formatTimestamp(timestamp)}</span>
    </div>
    
    <div class="p-6 space-y-4">
      <div class="text-md leading-relaxed flex">
        <span class="text-black/40 mr-3 min-w-[3rem]">{typeIndicators[type]}</span>
        <span>{content}</span>
      </div>
      
      {source && (
        <div class="text-xs text-black/50 border-t border-black/5 pt-3 mt-4">
          <div class="flex gap-1 items-center">
            <span class="text-black/40">$</span> 
            <span class="text-black/60">trace-source</span> 
            <span class="text-black/40">--origin</span>
          </div>
          <div class="ml-4 mt-1 p-2 bg-black/3 border-l-2 border-black/10">
            <span>> {source}</span>
          </div>
        </div>
      )}
    </div>
    
    <div class="bg-black/5 px-4 py-1 text-xs flex justify-between items-center">
      <span class="text-black/40 animate-pulse">â– </span>
      <span class="text-black/50">[Process completed with code 0]</span>
    </div>
  </div>
</div>
